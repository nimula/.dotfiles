# -----------------------------
# Global settings
# -----------------------------

# scroll back buffer n lines
set -g history-limit 10000

# listen for activity on all windows
set -g bell-action any

# start window and panes indexing at 1, so the <prefix> 1 is easier to reach
set -g base-index 1
set -g pane-base-index 1

# tell tmux to use 256 color terminal
set -g default-terminal "screen-256color"

# xterm-style function key sequences
setw -g xterm-keys on

# control automatic window renaming
setw -g automatic-rename off

# enable wm window titles
set -g set-titles on

# remove <esc> key press delay
set -sg escape-time 0

# window notifications; display activity on other window
setw -g monitor-activity on
set -g visual-activity on

# renumber windows sequentially after closing
set -g renumber-windows on

# fix ssh agent when tmux is detached
#bind-key '$' run "update_ssh_auth_sock" \; display-message "Refresh ssh environment..."
#bind-key '$' run "eval $(tmux show-env -s | grep '^SSH_')" \; display-message "Refresh ssh environment..."

# -----------------------------
# Key bindings
# -----------------------------

# set <prefix> key to Ctrl+a
unbind C-b
set-option -g prefix C-a

# use C-a again to send ctrl-a to inner session
bind-key C-a send-prefix

# detach session, keeping the program running
bind-key d detach

# reload config without killing server
bind-key R source-file ~/.tmux.conf \; display-message "Config reloaded..."

# Create and delete
#

# Create window
bind-key -n C-n new-window
# use C-n to create new windows because C-c is to interrupt

# split windows (create pane)
bind-key _ split-window -v -c '#{pane_current_path}'
bind-key | split-window -h -c '#{pane_current_path}'

# kill current pane when the inner process is unable to exit for whatever reason
bind-key q confirm-before kill-pane

# Navigation
#

# <prefix> or Ctrl- or <prefix> Ctrl-
#   k --- previous pane
# h   l --- previous window / next window
#   j --- next pane

# navigate windows
unbind-key l
bind-key h select-window -t :-
bind-key C-h select-window -t :-
bind-key -n C-h select-window -t :-
bind-key l select-window -t :+
bind-key C-l select-window -t :+
bind-key -n C-l select-window -t :+

# navigate panes
bind-key j select-pane -t :.-
bind-key C-j select-pane -t :.-
bind-key -n C-j select-pane -t :.-
bind-key k select-pane -t :.+
bind-key C-k select-pane -t :.+
bind-key -n C-k select-pane -t :.+

# Modify - rename, resize and reorder
#

# rename title
bind-key , command-prompt "rename-window %%"
#bind-key M-, command-prompt -I "#S" "rename-session -- '%%'"

# move the split line (resize pane)
# <prefix> shift-
#   k --- up
# h   l --- left / right
#   j --- down
bind-key -r H resize-pane -L 4
bind-key -r L resize-pane -R 4
bind-key -r K resize-pane -U 2
bind-key -r J resize-pane -D 2

# move (swap) panes and windows
# <prefix> alt-
#   k --- move pane next
# h   l --- move window left / move window right
#   j --- move pane previous
bind-key -r M-h swap-window -t :-
bind-key -r M-j swap-pane -D
bind-key -r M-k swap-pane -U
bind-key -r M-l swap-window -t :+

# change window pane layouts
bind-key -r M-f next-layout

# toggle a pane between full-screen and pane-size
bind-key f resize-pane -Z
bind-key C-f resize-pane -Z
bind-key -n C-f resize-pane -Z

# Copy-mode (vi-mode)
#

# vi-style controls for copy mode
setw -g mode-keys vi

# C-v (the original '[' is still available) to enter vi-mode
bind-key [ copy-mode
bind-key -n C-v copy-mode
bind-key C-v copy-mode

# select and copy like vi in vi-mode
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-selection

# pasting
bind-key ] paste-buffer
bind-key -n C-p paste-buffer
bind-key C-p paste-buffer

# enable navigation in vi mode
bind-key -T copy-mode-vi C-h select-window -t :-
bind-key -T copy-mode-vi C-l select-window -t :+
bind-key -T copy-mode-vi C-j select-pane -t :.-
bind-key -T copy-mode-vi C-k select-pane -t :.+

## Other useful commands

# open a man page in new pane, using q to leave
bind-key / command-prompt -p 'man ' "split-window -h 'exec man %%'"
bind-key r command-prompt -p 'Command >> ' "split-window -c '#{pane_current_path}' -h '%%; echo \"Press enter to continue.\"; read;'"

# Prevent terminal freezing by C-s
bind-key -n C-s display 'Terminal freezing by C-s prevented'

# -----------------------------
# Statusbar settings
# -----------------------------

# use vi-style key bindings in the status line
set -g status-keys vi

# amount of time for which status line messages and other indicators
# are displayed. time is in milliseconds.
set -g display-time 2000

# default statusbar colors
set-option -g status-style fg=white,bg=default,default

# default window title colors
set-window-option -g window-status-style fg=white,bg=default,dim

# active window title colors
set-window-option -g window-status-current-style fg=cyan,bg=default,bright,underscore

# command/message line colors
set-option -g message-style fg=white,bg=black,bright

# what to be displayed on the right status
#set -g status-interval 1
#set -g status-right ' } %Y-%m-%d %H:%M:%S'
#set -g status-right-length 60

# what to be displayed on the left status
#set -g status-left-length 30
#set-option -g status-left "#[fg=green]#(echo $USER)#[default].#[fg=blue]#h#[default] { "

# -----------------------------
# Platform fix
# -----------------------------

if-shell "hash reattach-to-user-namespace 2> /dev/null" 'set-option -g default-command "reattach-to-user-namespace bash"'

# Bad Wolf
set-option -g status-style fg=white,bg=colour234
set-window-option -g window-status-activity-style bold
set-option -g pane-border-style fg=colour245
set-option -g pane-active-border-style fg=colour39
set-option -g message-style fg=colour16,bg=colour221,bold

set-option -g status-position top
set -g status-left-length 32
set -g status-right-length 150
set -g status-interval 1

set -g @prefix_highlight_fg 'colour231' # default is 'colour231'
set -g @prefix_highlight_bg 'colour234'  # default is 'colour04'
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr 'fg=colour231,bg=04,bold'

# left= session_name > user_name > windows_index > windows_name
set -g status-left '#[fg=colour235,bg=colour252,bold]  #S #[fg=colour252,bg=colour238,nobold]#[fg=colour245,bg=colour238,bold] #(whoami) #[fg=colour238,bg=colour234,nobold]'
# right= host_short
set -g status-right '#{prefix_highlight}#[fg=colour238,nobold]#[fg=colour245,bg=colour238] #h #[fg=colour252]#[fg=colour235,bg=colour252,bold] %H:%M:%S '
set -g window-status-format "#[fg=white,bg=colour234] #I #W "
set -g window-status-current-format "#[fg=colour234,bg=colour39]#[fg=colour25,bg=colour39,noreverse,bold] #I  #W #[fg=colour39,bg=colour234,nobold]"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-sidebar'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

run '~/.tmux/plugins/tpm/tpm'
